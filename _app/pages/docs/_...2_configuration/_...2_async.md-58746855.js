import{S as Q,i as W,s as X,aa as V,w as L,k as m,l as R,x as q,m as d,y as T,g,ab as Z,q as G,o as O,B as x,d as E,_ as Y,E as f,e as _,t as h,c as b,a as w,h as v,M as A,j as z}from"../../../chunks/index-b3e2d4c5.js";import{F as ss,s as J}from"../../../chunks/base-6ff9851a.js";import{D as ns}from"../../../chunks/context-6a17120e.js";import{f as as}from"../../../chunks/scroll-1a9e7d58.js";import{C as ls}from"../../../chunks/CodeFence-23dc0382.js";import"../../../chunks/singletons-770e68ce.js";import"../../../chunks/contexts-d6f1f177.js";function ps(B){return{c:f,l:f,m:f,p:f,d:f}}function os(B){let s,a=B[8]&&K(B);return{c(){a&&a.c(),s=R()},l(l){a&&a.l(l),s=R()},m(l,t){a&&a.m(l,t),g(l,s,t)},p(l,t){l[8]?a?a.p(l,t):(a=K(l),a.c(),a.m(s.parentNode,s)):a&&(a.d(1),a=null)},d(l){a&&a.d(l),l&&E(s)}}}function K(B){let s,a,l,t,r=B[8].name+"",e,p,F,C,D,o,c=B[8].level+"",n,i,$,k,j,P,S=B[8].desc+"",N;return{c(){s=_("div"),a=_("strong"),l=h("Name:"),t=m(),e=h(r),p=_("br"),F=m(),C=_("strong"),D=h("Level:"),o=m(),n=h(c),i=_("br"),$=m(),k=_("strong"),j=h("Description:"),P=m(),N=h(S)},l(u){s=b(u,"DIV",{});var y=w(s);a=b(y,"STRONG",{});var H=w(a);l=v(H,"Name:"),H.forEach(E),t=d(y),e=v(y,r),p=b(y,"BR",{}),F=d(y),C=b(y,"STRONG",{});var M=w(C);D=v(M,"Level:"),M.forEach(E),o=d(y),n=v(y,c),i=b(y,"BR",{}),$=d(y),k=b(y,"STRONG",{});var U=w(k);j=v(U,"Description:"),U.forEach(E),P=d(y),N=v(y,S),y.forEach(E)},m(u,y){g(u,s,y),A(s,a),A(a,l),A(s,t),A(s,e),A(s,p),A(s,F),A(s,C),A(C,D),A(s,o),A(s,n),A(s,i),A(s,$),A(s,k),A(k,j),A(s,P),A(s,N)},p(u,y){y&1&&r!==(r=u[8].name+"")&&z(e,r),y&1&&c!==(c=u[8].level+"")&&z(n,c),y&1&&S!==(S=u[8].desc+"")&&z(N,S)},d(u){u&&E(s)}}}function es(B){return{c:f,l:f,m:f,p:f,d:f}}function Bs(B){let s,a,l,t,r;s=new ss({props:{form:B[1]}});let e={ctx:B,current:null,token:null,hasCatch:!1,pending:es,then:os,catch:ps,value:8};return V(t=B[0],e),{c(){L(s.$$.fragment),a=m(),l=R(),e.block.c()},l(p){q(s.$$.fragment,p),a=d(p),l=R(),e.block.l(p)},m(p,F){T(s,p,F),g(p,a,F),g(p,l,F),e.block.m(p,e.anchor=F),e.mount=()=>l.parentNode,e.anchor=l,r=!0},p(p,[F]){B=p,e.ctx=B,F&1&&t!==(t=B[0])&&V(t,e)||Z(e,B,F)},i(p){r||(G(s.$$.fragment,p),r=!0)},o(p){O(s.$$.fragment,p),r=!1},d(p){x(s,p),p&&E(a),p&&E(l),e.block.d(p),e.token=null,e=null}}}const I="https://www.dnd5eapi.co/api";function ts(B,s,a){let l,t,r,e={},p={};const F=ns.newForm([{type:"select",name:"class",label:"Class",schema:J(),options:async()=>(r||(r=await fetch(I+"/classes").then(o=>o.json())),[{label:"Select class...",value:""},...r.results.map(o=>({label:o.name,value:o.index}))])},{type:"select",name:"feature",label:"Spell",schema:J(),hide:o=>!("class"in o&&o.class),options:async o=>"class"in o&&o.class?(o.class in e||(e[o.class]=await fetch(I+"/classes/"+o.class+"/features").then(c=>c.json())),[{label:"Select feature...",value:""},...e[o.class].results.map(c=>({label:c.name,value:c.index}))]):[]}]),C=F.getData();Y(B,C,o=>a(3,t=o));const D=async o=>{const c=o.feature;if(c)return c in p||(p[c]=await fetch(I+"/features/"+c).then(n=>n.json())),p[c]};return B.$$.update=()=>{B.$$.dirty&8&&a(0,l=D(t))},[l,F,C,t]}class cs extends Q{constructor(s){super(),W(this,s,ts,Bs,X,{})}}function rs(B){let s,a=B[0].title+"",l,t,r,e=B[0].description+"",p,F,C,D,o,c;return C=new cs({}),o=new ls({props:{lang:"svelte",ext:"svelte",linesCount:123,code:`<pre><code><span class="line"><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">script</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">lang</span><span style="color: #ABB2BF">=</span><span style="color: #98C379">&quot;ts&quot;</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75">Form</span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;$lib&#39;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">*</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">as</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">zod</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;zod&#39;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75">DemoBase</span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;../../context&#39;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">API_BASE</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;https://www.dnd5eapi.co/api&#39;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ListResponse</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">results</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">name</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">index</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    }[];</span></span>
<span class="line"><span style="color: #ABB2BF">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">type</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Feature</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">name</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">level</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">number</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E06C75">desc</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">classesCache</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">ListResponse</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">classFeatureCache</span><span style="color: #ABB2BF">: {</span></span>
<span class="line"><span style="color: #ABB2BF">    [</span><span style="color: #E06C75; font-style: italic">key</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">]: </span><span style="color: #E5C07B">ListResponse</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">  } </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">let</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">featureCache</span><span style="color: #ABB2BF">: { [</span><span style="color: #E06C75; font-style: italic">key</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">]: </span><span style="color: #E5C07B">Feature</span><span style="color: #ABB2BF"> } </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">form</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">DemoBase</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">newForm</span><span style="color: #ABB2BF">([</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">type</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;select&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">name</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;class&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">label</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;Class&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">schema</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">zod</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">string</span><span style="color: #ABB2BF">(),</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #61AFEF">options</span><span style="color: #ABB2BF">: </span><span style="color: #C678DD">async</span><span style="color: #ABB2BF"> () </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #56B6C2">!</span><span style="color: #E06C75">classesCache</span><span style="color: #ABB2BF">) {</span></span>
<span class="line"><span style="color: #ABB2BF">          </span><span style="color: #E06C75">classesCache</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">fetch</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">API_BASE</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;/classes&#39;</span><span style="color: #ABB2BF">).</span><span style="color: #61AFEF">then</span><span style="color: #ABB2BF">((</span><span style="color: #E06C75; font-style: italic">data</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">json</span><span style="color: #ABB2BF">());</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> [</span></span>
<span class="line"><span style="color: #ABB2BF">          {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">label</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;Select class...&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">value</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;&#39;</span></span>
<span class="line"><span style="color: #ABB2BF">          },</span></span>
<span class="line"><span style="color: #ABB2BF">          ...</span><span style="color: #E5C07B">classesCache</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">results</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">map</span><span style="color: #ABB2BF">((</span><span style="color: #E06C75; font-style: italic">clazz</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">              </span><span style="color: #E06C75">label</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">clazz</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">name</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">              </span><span style="color: #E06C75">value</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">clazz</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">index</span></span>
<span class="line"><span style="color: #ABB2BF">            };</span></span>
<span class="line"><span style="color: #ABB2BF">          })</span></span>
<span class="line"><span style="color: #ABB2BF">        ];</span></span>
<span class="line"><span style="color: #ABB2BF">      }</span></span>
<span class="line"><span style="color: #ABB2BF">    },</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">type</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;select&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">name</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;feature&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">label</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;Spell&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #E06C75">schema</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">zod</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">string</span><span style="color: #ABB2BF">(),</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #61AFEF">hide</span><span style="color: #ABB2BF">: (</span><span style="color: #E06C75; font-style: italic">data</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">!</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&#39;class&#39;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">in</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">data</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">&amp;&amp;</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">class</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">      },</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #61AFEF">options</span><span style="color: #ABB2BF">: </span><span style="color: #C678DD">async</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75; font-style: italic">data</span><span style="color: #ABB2BF">: { </span><span style="color: #E06C75">class</span><span style="color: #C678DD">?</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF"> }) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #56B6C2">!</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&#39;class&#39;</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">in</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">data</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">&amp;&amp;</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">class</span><span style="color: #ABB2BF">)) {</span></span>
<span class="line"><span style="color: #ABB2BF">          </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> [];</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #56B6C2">!</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">class</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">in</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">classFeatureCache</span><span style="color: #ABB2BF">)) {</span></span>
<span class="line"><span style="color: #ABB2BF">          </span><span style="color: #E06C75">classFeatureCache</span><span style="color: #ABB2BF">[</span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">class</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">fetch</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">API_BASE</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;/classes/&#39;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">class</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;/features&#39;</span><span style="color: #ABB2BF">).</span><span style="color: #61AFEF">then</span><span style="color: #ABB2BF">((</span><span style="color: #E06C75; font-style: italic">data</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">json</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">          );</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> [</span></span>
<span class="line"><span style="color: #ABB2BF">          {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">label</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;Select feature...&#39;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">value</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&#39;&#39;</span></span>
<span class="line"><span style="color: #ABB2BF">          },</span></span>
<span class="line"><span style="color: #ABB2BF">          ...</span><span style="color: #E06C75">classFeatureCache</span><span style="color: #ABB2BF">[</span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">class</span><span style="color: #ABB2BF">].</span><span style="color: #E5C07B">results</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">map</span><span style="color: #ABB2BF">((</span><span style="color: #E06C75; font-style: italic">feature</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">              </span><span style="color: #E06C75">label</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">feature</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">name</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">              </span><span style="color: #E06C75">value</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">feature</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">index</span></span>
<span class="line"><span style="color: #ABB2BF">            };</span></span>
<span class="line"><span style="color: #ABB2BF">          })</span></span>
<span class="line"><span style="color: #ABB2BF">        ];</span></span>
<span class="line"><span style="color: #ABB2BF">      }</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">  ] </span><span style="color: #C678DD">as</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">form</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">getData</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">getFeature</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">async</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75; font-style: italic">data</span><span style="color: #ABB2BF">: { </span><span style="color: #E06C75">feature</span><span style="color: #C678DD">?</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">unknown</span><span style="color: #ABB2BF"> }): </span><span style="color: #E5C07B">Promise</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Feature</span><span style="color: #ABB2BF">&gt; </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">feature</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">as</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">string</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF">) {</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #56B6C2">!</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">in</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">featureCache</span><span style="color: #ABB2BF">)) {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">featureCache</span><span style="color: #ABB2BF">[</span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">fetch</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">API_BASE</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&#39;/features/&#39;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">+</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF">).</span><span style="color: #61AFEF">then</span><span style="color: #ABB2BF">((</span><span style="color: #E06C75; font-style: italic">data</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">data</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">json</span><span style="color: #ABB2BF">());</span></span>
<span class="line"><span style="color: #ABB2BF">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">featureCache</span><span style="color: #ABB2BF">[</span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF">];</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">undefined</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">  $: </span><span style="color: #E06C75">featureData</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">getFeature</span><span style="color: #ABB2BF">($</span><span style="color: #E06C75">data</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">&lt;/</span><span style="color: #E06C75">script</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">Form</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">{</span><span style="color: #E06C75">form</span><span style="color: #D19A66">}</span><span style="color: #ABB2BF"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">{#</span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">featureData</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">then</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF">}</span></span>
<span class="line"><span style="color: #ABB2BF">  {#</span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">feature</span><span style="color: #ABB2BF">}</span></span>
<span class="line"><span style="color: #ABB2BF">    &lt;</span><span style="color: #E06C75">div</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">      &lt;</span><span style="color: #E06C75">strong</span><span style="color: #ABB2BF">&gt;Name: &lt;/</span><span style="color: #E06C75">strong</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #C678DD">{</span><span style="color: #E5C07B">feature</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">name</span><span style="color: #C678DD">}</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">br</span><span style="color: #ABB2BF"> /&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">      &lt;</span><span style="color: #E06C75">strong</span><span style="color: #ABB2BF">&gt;Level: &lt;/</span><span style="color: #E06C75">strong</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #C678DD">{</span><span style="color: #E5C07B">feature</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">level</span><span style="color: #C678DD">}</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">br</span><span style="color: #ABB2BF"> /&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">      &lt;</span><span style="color: #E06C75">strong</span><span style="color: #ABB2BF">&gt;Description:&lt;/</span><span style="color: #E06C75">strong</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">      </span><span style="color: #C678DD">{</span><span style="color: #E5C07B">feature</span><span style="color: #ABB2BF">.</span><span style="color: #E06C75">desc</span><span style="color: #C678DD">}</span></span>
<span class="line"><span style="color: #ABB2BF">    &lt;/</span><span style="color: #E06C75">div</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">  {/</span><span style="color: #C678DD">if</span><span style="color: #ABB2BF">}</span></span>
<span class="line"><span style="color: #ABB2BF">{/</span><span style="color: #C678DD">await</span><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){s=_("h1"),l=h(a),t=m(),r=_("p"),p=h(e),F=m(),L(C.$$.fragment),D=m(),L(o.$$.fragment)},l(n){s=b(n,"H1",{});var i=w(s);l=v(i,a),i.forEach(E),t=d(n),r=b(n,"P",{});var $=w(r);p=v($,e),$.forEach(E),F=d(n),q(C.$$.fragment,n),D=d(n),q(o.$$.fragment,n)},m(n,i){g(n,s,i),A(s,l),g(n,t,i),g(n,r,i),A(r,p),g(n,F,i),T(C,n,i),g(n,D,i),T(o,n,i),c=!0},p(n,[i]){(!c||i&1)&&a!==(a=n[0].title+"")&&z(l,a),(!c||i&1)&&e!==(e=n[0].description+"")&&z(p,e)},i(n){c||(G(C.$$.fragment,n),G(o.$$.fragment,n),c=!0)},o(n){O(C.$$.fragment,n),O(o.$$.fragment,n),c=!1},d(n){n&&E(s),n&&E(t),n&&E(r),n&&E(F),x(C,n),n&&E(D),x(o,n)}}}function ys(B,s,a){let l;return Y(B,as,t=>a(0,l=t)),[l]}class us extends Q{constructor(s){super(),W(this,s,ys,rs,X,{})}}export{us as default};
